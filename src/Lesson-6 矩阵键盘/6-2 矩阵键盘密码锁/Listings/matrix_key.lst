C51 COMPILER V9.60.7.0   MATRIX_KEY                                                        07/22/2023 16:58:17 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MATRIX_KEY
OBJECT MODULE PLACED IN .\Objects\matrix_key.obj
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE lib\matrix_key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\matrix_key.lst) OBJECT(.\Objects\matrix_key.obj)

line level    source

   1          #include "matrix_key.h"
   2          #include "utilities.h"
   3          #include <REGX52.H>
   4          
   5          // 暴力扫描得到按键编号(1~16)
   6          // 返回0:按键未按下
   7          uint8_t MatrixKey_Scan()
   8          {
   9   1          uint8_t keyId = 0;
  10   1      
  11   1      #define CheckButtonDown(ButtonRegisterId, Id) \
  12   1          if (ButtonRegisterId == 0)                \
  13   1          {                                         \
  14   1              Sleep(20);                            \
  15   1              while (ButtonRegisterId == 0)         \
  16   1                  ;                                 \
  17   1              Sleep(20);                            \
  18   1              keyId = Id;                           \
  19   1          }
  20   1      
  21   1          P1 = 0xFF;
  22   1          P1_3 = 0;
  23   1          CheckButtonDown(P1_7, 1);
  24   1          CheckButtonDown(P1_6, 5);
  25   1          CheckButtonDown(P1_5, 9);
  26   1          CheckButtonDown(P1_4, 13);
  27   1      
  28   1          P1 = 0xFF;
  29   1          P1_2 = 0;
  30   1          CheckButtonDown(P1_7, 2);
  31   1          CheckButtonDown(P1_6, 6);
  32   1          CheckButtonDown(P1_5, 10);
  33   1          CheckButtonDown(P1_4, 14);
  34   1      
  35   1          P1 = 0xFF;
  36   1          P1_1 = 0;
  37   1          CheckButtonDown(P1_7, 3);
  38   1          CheckButtonDown(P1_6, 7);
  39   1          CheckButtonDown(P1_5, 11);
  40   1          CheckButtonDown(P1_4, 15);
  41   1      
  42   1          P1 = 0xFF;
  43   1          P1_0 = 0;
  44   1          CheckButtonDown(P1_7, 4);
  45   1          CheckButtonDown(P1_6, 8);
  46   1          CheckButtonDown(P1_5, 12);
  47   1          CheckButtonDown(P1_4, 16);
  48   1      
  49   1          return keyId;
  50   1      #undef CheckButtonDown
  51   1      }
  52          
  53          #define KEY_MATRIX_PORT P1 // 使用宏定义矩阵按键控制口
  54          uint8_t key_matrix_ranks_scan(void)
C51 COMPILER V9.60.7.0   MATRIX_KEY                                                        07/22/2023 16:58:17 PAGE 2   

  55          {
  56   1          uint8_t key_value = 0;
  57   1      
  58   1          KEY_MATRIX_PORT = 0xf7;      // 给第一列赋值0，其余全为1
  59   1          if (KEY_MATRIX_PORT != 0xf7) // 判断第一列按键是否按下
  60   1          {
  61   2              Sleep(20);
  62   2              ;                        // 消抖
  63   2              switch (KEY_MATRIX_PORT) // 保存第一列按键按下后的键值
  64   2              {
  65   3              case 0x77:
  66   3                  key_value = 1;
  67   3                  break;
  68   3              case 0xb7:
  69   3                  key_value = 5;
  70   3                  break;
  71   3              case 0xd7:
  72   3                  key_value = 9;
  73   3                  break;
  74   3              case 0xe7:
  75   3                  key_value = 13;
  76   3                  break;
  77   3              }
  78   2          }
  79   1          while (KEY_MATRIX_PORT != 0xf7)
  80   1              ; // 等待按键松开
  81   1      
  82   1          KEY_MATRIX_PORT = 0xfb;      // 给第二列赋值0，其余全为1
  83   1          if (KEY_MATRIX_PORT != 0xfb) // 判断第二列按键是否按下
  84   1          {
  85   2              Sleep(20);
  86   2              ;                        // 消抖
  87   2              switch (KEY_MATRIX_PORT) // 保存第二列按键按下后的键值
  88   2              {
  89   3              case 0x7b:
  90   3                  key_value = 2;
  91   3                  break;
  92   3              case 0xbb:
  93   3                  key_value = 6;
  94   3                  break;
  95   3              case 0xdb:
  96   3                  key_value = 10;
  97   3                  break;
  98   3              case 0xeb:
  99   3                  key_value = 14;
 100   3                  break;
 101   3              }
 102   2          }
 103   1          while (KEY_MATRIX_PORT != 0xfb)
 104   1              ; // 等待按键松开
 105   1      
 106   1          KEY_MATRIX_PORT = 0xfd;      // 给第三列赋值0，其余全为1
 107   1          if (KEY_MATRIX_PORT != 0xfd) // 判断第三列按键是否按下
 108   1          {
 109   2              Sleep(20);
 110   2              ;                        // 消抖
 111   2              switch (KEY_MATRIX_PORT) // 保存第三列按键按下后的键值
 112   2              {
 113   3              case 0x7d:
 114   3                  key_value = 3;
 115   3                  break;
 116   3              case 0xbd:
C51 COMPILER V9.60.7.0   MATRIX_KEY                                                        07/22/2023 16:58:17 PAGE 3   

 117   3                  key_value = 7;
 118   3                  break;
 119   3              case 0xdd:
 120   3                  key_value = 11;
 121   3                  break;
 122   3              case 0xed:
 123   3                  key_value = 15;
 124   3                  break;
 125   3              }
 126   2          }
 127   1          while (KEY_MATRIX_PORT != 0xfd)
 128   1              ; // 等待按键松开
 129   1      
 130   1          KEY_MATRIX_PORT = 0xfe;      // 给第四列赋值0，其余全为1
 131   1          if (KEY_MATRIX_PORT != 0xfe) // 判断第四列按键是否按下
 132   1          {
 133   2              Sleep(20);
 134   2              ;                        // 消抖
 135   2              switch (KEY_MATRIX_PORT) // 保存第四列按键按下后的键值
 136   2              {
 137   3              case 0x7e:
 138   3                  key_value = 4;
 139   3                  break;
 140   3              case 0xbe:
 141   3                  key_value = 8;
 142   3                  break;
 143   3              case 0xde:
 144   3                  key_value = 12;
 145   3                  break;
 146   3              case 0xee:
 147   3                  key_value = 16;
 148   3                  break;
 149   3              }
 150   2          }
 151   1          while (KEY_MATRIX_PORT != 0xfe)
 152   1              ; // 等待按键松开
 153   1      
 154   1          return key_value;
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    773    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
